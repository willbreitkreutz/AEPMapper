{"ast":null,"code":"/**\n * @module ol/render/Event\n */\nimport Event from '../events/Event.js';\n\nvar RenderEvent =\n/*@__PURE__*/\nfunction (Event) {\n  function RenderEvent(type, opt_vectorContext, opt_frameState, opt_context, opt_glContext) {\n    Event.call(this, type);\n    /**\n     * For canvas, this is an instance of {@link module:ol/render/canvas/Immediate}.\n     * @type {import(\"./VectorContext.js\").default|undefined}\n     * @api\n     */\n\n    this.vectorContext = opt_vectorContext;\n    /**\n     * An object representing the current render frame state.\n     * @type {import(\"../PluggableMap.js\").FrameState|undefined}\n     * @api\n     */\n\n    this.frameState = opt_frameState;\n    /**\n     * Canvas context. Only available when a Canvas renderer is used, null\n     * otherwise.\n     * @type {CanvasRenderingContext2D|null|undefined}\n     * @api\n     */\n\n    this.context = opt_context;\n    /**\n     * WebGL context. Only available when a WebGL renderer is used, null\n     * otherwise.\n     * @type {import(\"../webgl/Context.js\").default|null|undefined}\n     * @api\n     */\n\n    this.glContext = opt_glContext;\n  }\n\n  if (Event) RenderEvent.__proto__ = Event;\n  RenderEvent.prototype = Object.create(Event && Event.prototype);\n  RenderEvent.prototype.constructor = RenderEvent;\n  return RenderEvent;\n}(Event);\n\nexport default RenderEvent;","map":null,"metadata":{},"sourceType":"module"}