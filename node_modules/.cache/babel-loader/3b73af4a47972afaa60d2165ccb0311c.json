{"ast":null,"code":"import VectorLayer from 'ol/layer/Vector';\nimport VectorSource from 'ol/source/Vector';\nexport default {\n  name: 'draw',\n  getReducer: () => {\n    const initialData = {\n      layer: null,\n      shouldInitalize: false\n    };\n    return (state = initialData, {\n      type,\n      payload\n    }) => {\n      switch (type) {\n        case \"DRAW_INITIALIZE_STARTED\":\n        case \"DRAW_INITIALIZE_FINISHED\":\n          return Object.assign({}, state, payload);\n\n        case \"MAP_INITIALIZED\":\n          return Object.assign({}, state, {\n            shouldInitalize: true\n          });\n\n        default:\n          return state;\n      }\n    };\n  },\n  doDrawInitializeLayer: () => ({\n    dispatch,\n    store\n  }) => {\n    dispatch({\n      type: 'DRAW_INITIALIZE_STARTED',\n      payload: {\n        shouldInitalize: false\n      }\n    });\n    const map = store.selectMap();\n    const source = new VectorSource();\n    const layer = new VectorLayer({\n      source: source\n    });\n    map.addLayer(layer);\n    dispatch({\n      type: 'DRAW_INITIALIZE_FINISHED',\n      payload: {\n        layer: layer\n      }\n    });\n  },\n  selectDrawLayer: state => {\n    return state.draw.layer;\n  },\n  reactDrawShouldInitialize: state => {\n    if (state.draw.shouldInitalize) return {\n      actionCreator: 'doDrawInitializeLayer'\n    };\n  }\n};","map":{"version":3,"sources":["C:\\Examples\\sharemap\\src\\app-bundles\\draw-bundle.js"],"names":["VectorLayer","VectorSource","name","getReducer","initialData","layer","shouldInitalize","state","type","payload","Object","assign","doDrawInitializeLayer","dispatch","store","map","selectMap","source","addLayer","selectDrawLayer","draw","reactDrawShouldInitialize","actionCreator"],"mappings":"AAAA,OAAOA,WAAP,MAAwB,iBAAxB;AACA,OAAOC,YAAP,MAAyB,kBAAzB;AAEA,eAAe;AACXC,EAAAA,IAAI,EAAE,MADK;AAEXC,EAAAA,UAAU,EAAC,MAAK;AACZ,UAAMC,WAAW,GAAG;AAChBC,MAAAA,KAAK,EAAE,IADS;AAEhBC,MAAAA,eAAe,EAAE;AAFD,KAApB;AAIA,WAAO,CAACC,KAAK,GAAGH,WAAT,EAAsB;AAACI,MAAAA,IAAD;AAAOC,MAAAA;AAAP,KAAtB,KAA0C;AAC7C,cAAOD,IAAP;AACI,aAAK,yBAAL;AACA,aAAK,0BAAL;AACI,iBAAOE,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,KAAlB,EAAyBE,OAAzB,CAAP;;AACJ,aAAK,iBAAL;AACI,iBAAOC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,KAAlB,EAAyB;AAC5BD,YAAAA,eAAe,EAAE;AADW,WAAzB,CAAP;;AAGJ;AACI,iBAAOC,KAAP;AATR;AAWH,KAZD;AAaH,GApBU;AAqBXK,EAAAA,qBAAqB,EAAE,MAAM,CAAC;AAACC,IAAAA,QAAD;AAAWC,IAAAA;AAAX,GAAD,KAAuB;AAChDD,IAAAA,QAAQ,CAAC;AAACL,MAAAA,IAAI,EAAE,yBAAP;AAAkCC,MAAAA,OAAO,EAAE;AAACH,QAAAA,eAAe,EAAE;AAAlB;AAA3C,KAAD,CAAR;AACA,UAAMS,GAAG,GAAGD,KAAK,CAACE,SAAN,EAAZ;AACA,UAAMC,MAAM,GAAG,IAAIhB,YAAJ,EAAf;AACA,UAAMI,KAAK,GAAG,IAAIL,WAAJ,CAAgB;AAC1BiB,MAAAA,MAAM,EAAEA;AADkB,KAAhB,CAAd;AAGAF,IAAAA,GAAG,CAACG,QAAJ,CAAab,KAAb;AACAQ,IAAAA,QAAQ,CAAC;AACLL,MAAAA,IAAI,EAAE,0BADD;AAELC,MAAAA,OAAO,EAAC;AACJJ,QAAAA,KAAK,EAAEA;AADH;AAFH,KAAD,CAAR;AAMH,GAnCU;AAoCXc,EAAAA,eAAe,EAAGZ,KAAD,IAAW;AACxB,WAAOA,KAAK,CAACa,IAAN,CAAWf,KAAlB;AACH,GAtCU;AAuCXgB,EAAAA,yBAAyB,EAAGd,KAAD,IAAW;AAClC,QAAGA,KAAK,CAACa,IAAN,CAAWd,eAAd,EAA+B,OAAO;AAAEgB,MAAAA,aAAa,EAAE;AAAjB,KAAP;AAClC;AAzCU,CAAf","sourcesContent":["import VectorLayer from 'ol/layer/Vector';\r\nimport VectorSource from 'ol/source/Vector';\r\n\r\nexport default {\r\n    name: 'draw',\r\n    getReducer:() =>{\r\n        const initialData = {\r\n            layer: null,\r\n            shouldInitalize: false\r\n        }\r\n        return (state = initialData, {type, payload}) => {\r\n            switch(type){\r\n                case \"DRAW_INITIALIZE_STARTED\":\r\n                case \"DRAW_INITIALIZE_FINISHED\":\r\n                    return Object.assign({}, state, payload);\r\n                case \"MAP_INITIALIZED\":\r\n                    return Object.assign({}, state, {\r\n                        shouldInitalize: true\r\n                    });\r\n                default:\r\n                    return state;\r\n            }\r\n        }\r\n    },\r\n    doDrawInitializeLayer: () => ({dispatch, store}) => {\r\n        dispatch({type: 'DRAW_INITIALIZE_STARTED', payload: {shouldInitalize: false}})\r\n        const map = store.selectMap();\r\n        const source = new VectorSource();\r\n        const layer = new VectorLayer({\r\n            source: source\r\n        })\r\n        map.addLayer(layer);\r\n        dispatch({\r\n            type: 'DRAW_INITIALIZE_FINISHED',\r\n            payload:{\r\n                layer: layer\r\n            }\r\n        })\r\n    },\r\n    selectDrawLayer: (state) => {\r\n        return state.draw.layer;\r\n    },\r\n    reactDrawShouldInitialize: (state) => {\r\n        if(state.draw.shouldInitalize) return { actionCreator: 'doDrawInitializeLayer'}\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}