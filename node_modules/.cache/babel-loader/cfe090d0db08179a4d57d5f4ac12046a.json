{"ast":null,"code":"import xhr from 'xhr';\nexport default (opts => {\n  const defaults = {\n    name: 'api',\n    root: ''\n  };\n  const config = Object.assign({}, defaults, opts);\n  return {\n    name: config.name,\n    getReducer: () => {\n      const initialData = {\n        root: config.root\n      };\n      return (state = initialData, {\n        type,\n        payload\n      }) => {\n        return state;\n      };\n    },\n    selectApiRoot: state => {\n      return state.api.root;\n    },\n    getExtraArgs: store => {\n      return {\n        anonGet: (path, callback) => {\n          const root = store.selectApiRoot();\n          const options = {\n            url: \"\".concat(root).concat(path)\n          };\n          xhr.get(options, callback);\n        },\n        apiGet: (path, callback) => {\n          const token = store.selectAuthTokenRaw();\n          if (!token) return null;\n          const root = store.selectApiRoot();\n          const options = {\n            url: \"\".concat(root).concat(path)\n          };\n\n          if (token) {\n            options.headers = {\n              Authorization: \"Bearer \" + token\n            };\n          }\n\n          xhr.get(options, callback);\n        },\n        apiPut: (path, payload, callback) => {\n          const token = store.selectAuthTokenRaw();\n          if (!token) return null;\n          const root = store.selectApiRoot();\n          const options = {\n            url: \"\".concat(root).concat(path),\n            json: payload\n          };\n\n          if (token) {\n            options.headers = {\n              Authorization: \"Bearer \" + token\n            };\n          }\n\n          xhr.put(options, callback);\n        },\n        apiPost: (path, payload, callback) => {\n          const token = store.selectAuthTokenRaw();\n          if (!token) return null;\n          const root = store.selectApiRoot();\n          const options = {\n            url: \"\".concat(root).concat(path),\n            json: payload\n          };\n\n          if (token) {\n            options.headers = {\n              Authorization: \"Bearer \" + token\n            };\n          }\n\n          xhr.post(options, callback);\n        },\n        apiDelete: (path, callback) => {\n          const token = store.selectAuthTokenRaw();\n          if (!token) return null;\n          const root = store.selectApiRoot();\n          const options = {\n            url: \"\".concat(root).concat(path)\n          };\n\n          if (token) {\n            options.headers = {\n              Authorization: \"Bearer \" + token\n            };\n          }\n\n          xhr.del(options, callback);\n        }\n      };\n    }\n  };\n});","map":null,"metadata":{},"sourceType":"module"}