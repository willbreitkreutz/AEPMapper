{"ast":null,"code":"import Url from \"url-parse\";\nimport { createSelector } from \"redux-bundler\";\nexport default (options => {\n  const defaults = {\n    name: \"nestedUrl\",\n    pkg: null,\n    addons: {}\n  };\n  const config = Object.assign({}, defaults, options);\n  return Object.assign({}, {\n    name: config.name,\n    getReducer: () => {\n      const initialData = {\n        pkg: config.pkg\n      };\n      return (state = initialData, {\n        type,\n        payload\n      }) => {\n        return state;\n      };\n    },\n    doUpdateUrlWithHomepage: path => ({\n      store\n    }) => {\n      const pkg = store.selectPackageInfo();\n      if (!pkg || !pkg.homepage) return store.doUpdateUrl(path);\n      store.doUpdateUrl(\"\".concat(pkg.homepage).concat(path));\n    },\n    selectPackageInfo: state => {\n      return state[config.name].pkg;\n    },\n    selectHomepage: createSelector(\"selectPackageInfo\", pkg => {\n      if (!pkg || !pkg.homepage) return \"\";\n      const url = new Url(pkg.homepage);\n      return url.pathname;\n    }),\n    selectPathnameMinusHomepage: createSelector(\"selectPathname\", \"selectHomepage\", (pathname, homepage) => {\n      const matcher = new RegExp(homepage);\n      return pathname.replace(matcher, \"\");\n    }),\n    selectPublicFolder: createSelector(\"selectHomepage\", homepage => {\n      if (process.env.NODE_ENV !== \"production\") return \"\";\n      return \"\".concat(homepage, \"/\");\n    })\n  }, config.addons);\n});","map":null,"metadata":{},"sourceType":"module"}